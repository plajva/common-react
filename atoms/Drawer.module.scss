@import '@rootp/cindex';

.menu {
	text-align: center;
	z-index: 12;
}
.open {
	// transform: 0;
}

.menu.v_always {
	position: relative;
	transform: unset;
}
.back,
.menu {
	padding: 8px;
	padding-right: 28px;
	z-index: 0;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	max-height: 100vh;

	overflow: auto;
	&.fixed {
		position: fixed;
		max-height: 100%;
	}
	&.sticky {
		position: sticky;
		top: 0;
	}
}

.back {
	background: rgba(#000, 0.3);
}
.menu {
	transform: translateX(-100%);
}
.menu-right {
	transform: translateX(100%);
	left: unset;
	right: 0;
}
.menu-right {
	left: unset;
	right: 0;
}
.menu-left {
	left: 0;
	right: unset;
}
.menu.floating {
	top: 50%;
	transform: translateY(-50%);
	height: unset;
	left: 5px;
	padding-block: get-space(4);
	border-radius: get-space(2);
}

.hook-header {
	font-size: 1.1em;
	font-weight: bold;
}
.content {
	flex-grow: 1;
	height: 100vh;
	position: relative;
	min-width: 0;
	// So that if there are any items with higher z-index in content they won't get on top of our drawer
	z-index: 0;
	border-left: 1px solid #8889;
	border-top-left-radius: 24px;
	border-bottom-left-radius: 24px;
	// background: #8881;
	overflow: auto;
	overscroll-behavior: none;
}

.menu,
.menu-right {
	max-width: 240px;
}

.comp {
	// My definitions by default
	position: relative;
	display: flex;

	@include use-theme using ($ts) {
		// Theme Iterator
		$background: get-color(background, 0);
		&#{$ts} .menu,
		&#{$ts} .menu-right {
			@include background-color($background, -2);
		}
		&#{$ts} .content {
			@include background-color($background, 0);
		}
		// @supports (backdrop-filter: blur(10px)) {
		// 	&#{$ts} .menu,
		// 	&#{$ts} .menu-right {
		// 		// background: get-color($background, 0, $alpha: 1);
		// 		backdrop-filter: blur(10px);
		// 	}
		// }

		@include use-color using ($cn, $c) {
			// Color Iterator
		}
	}
}
